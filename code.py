from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiogram.filters import Command
import asyncio

bot = Bot(token="YOUR_BOT_TOKEN")
dp = Dispatcher()

@dp.message(Command('start'))
async def start(message: types.Message):
    markup = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(
                text="üîó Connect Tonkeeper",
                web_app=WebAppInfo(url="https://tonkeeper-bot.vercel.app/")
            )]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:",
        reply_markup=markup
    )

@dp.message(lambda message: message.web_app_data is not None)
async def handle_web_app_data(message: types.Message):
    wallet_address = message.web_app_data.data
    await message.answer(
        f"‚úÖ –ö–æ—à–µ–ª—ë–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
        f"–ê–¥—Ä–µ—Å: `{wallet_address}`",
        parse_mode="Markdown"
    )
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º –∫–æ—à–µ–ª—å–∫–æ–º

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())